 public class Solution {
    public int uniquePaths(int m, int n) {
        Integer[][] map = new Integer[m][n];
        for(int i = 0; i<m;i++) map[i][0] = 1;
        for(int j= 0;j<n;j++) map[0][j]=1;
        for(int i = 1;i<m;i++){
            for(int j = 1;j<n;j++) map[i][j] = map[i-1][j]+map[i][j-1];
        }
        return map[m-1][n-1];
    }
}


public class Solution {
    public int uniquePathsWithObstacles(int[][] obstacleGrid) {
        int width = obstacleGrid[0].length;
        int[] dp = new int[width];
        dp[0] = 1;
        for (int[] row : obstacleGrid) {
            for (int j = 0; j < width; j++) {
                if (row[j] == 1) dp[j] = 0;
                else if (j > 0) dp[j] += dp[j - 1];
            }
        }
        return dp[width - 1];
    }
}
